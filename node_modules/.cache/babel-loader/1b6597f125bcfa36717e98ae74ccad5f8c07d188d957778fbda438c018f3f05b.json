{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jomas\\\\todo3\\\\src\\\\components\\\\Form\\\\LoginFormik.jsx\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport * as Yup from \"yup\";\nimport { fetchUser } from \"../../Services/thunkService\";\nimport { changeEmail, changeLog } from \"../../Redux/Store/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"invalid email format\").required(\"email is required\"),\n  password: Yup.string().required(\"password is required\")\n});\nconst LoginFormik = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const initialCredentials = {\n    email: \"\",\n    password: \"\"\n  };\n  const handelClick = () => {\n    dispatch(fetchUser());\n    navigate(\"/Profile\");\n  };\n  return /*#__PURE__*/_jsxDEV(Formik\n  //intial values\n  , {\n    initialValues: initialCredentials\n    //YUP validation schema\n    ,\n    validationSchema: loginSchema\n    //VALUES toma los valores que son enviados desde el formulario\n    ,\n    onSubmit: event => {\n      event.preventDefault();\n    },\n    children: ({\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"ejemplo@gmail.com\",\n        type: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => handelClick(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginFormik, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginFormik;\nexport default LoginFormik;\nvar _c;\n$RefreshReg$(_c, \"LoginFormik\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useDispatch","useNavigate","Yup","fetchUser","changeEmail","changeLog","jsxDEV","_jsxDEV","loginSchema","object","shape","email","string","required","password","LoginFormik","_s","navigate","dispatch","initialCredentials","handelClick","initialValues","validationSchema","onSubmit","event","preventDefault","children","values","touched","errors","isSubmitting","handleChange","handleBlur","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","placeholder","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jomas/todo3/src/components/Form/LoginFormik.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\nimport { fetchUser } from \"../../Services/thunkService\";\r\nimport { changeEmail, changeLog } from \"../../Redux/Store/userSlice\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"invalid email format\")\r\n    .required(\"email is required\"),\r\n  password: Yup.string().required(\"password is required\"),\r\n});\r\n\r\nconst LoginFormik = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const initialCredentials = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const handelClick = () => {\r\n    dispatch(fetchUser());\r\n    navigate(\"/Profile\");\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      //intial values\r\n      initialValues={initialCredentials}\r\n      //YUP validation schema\r\n      validationSchema={loginSchema}\r\n      //VALUES toma los valores que son enviados desde el formulario\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n    >\r\n      {/*obtenemos props de formik, estos son aportados por la misma etiqueta */}\r\n      {({\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n      }) => (\r\n        <Form>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Field\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"ejemplo@gmail.com\"\r\n            type=\"email\"\r\n            required\r\n          ></Field>\r\n\r\n          {/*aqi manejo los errores del mail */}\r\n          {errors.email && touched.email && (\r\n            <div>\r\n              <ErrorMessage name=\"email\"></ErrorMessage>\r\n            </div>\r\n          )}\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <Field\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n          ></Field>\r\n          {/*aqi manejo los errores del password */}\r\n          {errors.password && touched.password && (\r\n            <div>\r\n              <ErrorMessage name=\"password\"></ErrorMessage>\r\n            </div>\r\n          )}\r\n          <button type=\"submit\" onClick={() => handelClick()}>\r\n            Login\r\n          </button>\r\n          {/*este es un prop que me captura el estado de la carga(isSubmittin:boolean) */}\r\n          {/* {isSubmitting ? <p>login your credentials...</p> : null} */}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginFormik;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}