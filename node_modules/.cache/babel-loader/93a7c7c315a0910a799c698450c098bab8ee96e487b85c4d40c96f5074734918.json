{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jomas\\\\todo3\\\\src\\\\components\\\\Form\\\\LoginFormik.jsx\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport * as Yup from \"yup\";\nimport { fetchUser } from \"../../Services/thunkService\";\nimport { changeEmail, changeLog } from \"../../Redux/Store/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"invalid email format\").required(\"email is required\"),\n  password: Yup.string().required(\"password is required\")\n});\nconst LoginFormik = ({}) => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const initialCredentials = {\n    email: \"\",\n    password: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik\n    //intial values\n    , {\n      initialValues: initialCredentials\n      //YUP validation schema\n      ,\n      validationSchema: loginSchema\n      //VALUES toma los valores que son enviados desde el formulario\n      ,\n      onSubmit: event => {\n        event.preventDefault();\n        dispatch(fetchUser());\n        navigate(\"/Profile\");\n      }\n      // await new Promise((r) => setTimeout(r, 1000));\n      //   //alert(JSON.stringify(values, null, 2));\n      //   //!!aqui se debe escuchar al STORE para cambiar el\n      //   //!!ESTADO LOG\n\n      //   //setlogged(true);\n      //   /*we save the data in the LOCALSTORAGE */\n      //   //localStorage.setItem(\"credentials\", values);\n      ,\n      children: ({\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"ejemplo@gmail.com\",\n          type: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginFormik, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginFormik;\nexport default LoginFormik;\nvar _c;\n$RefreshReg$(_c, \"LoginFormik\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useDispatch","useNavigate","Yup","fetchUser","changeEmail","changeLog","jsxDEV","_jsxDEV","loginSchema","object","shape","email","string","required","password","LoginFormik","_s","navigate","dispatch","initialCredentials","children","initialValues","validationSchema","onSubmit","event","preventDefault","values","touched","errors","isSubmitting","handleChange","handleBlur","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/jomas/todo3/src/components/Form/LoginFormik.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\nimport { fetchUser } from \"../../Services/thunkService\";\r\nimport { changeEmail, changeLog } from \"../../Redux/Store/userSlice\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"invalid email format\")\r\n    .required(\"email is required\"),\r\n  password: Yup.string().required(\"password is required\"),\r\n});\r\n\r\nconst LoginFormik = ({}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const initialCredentials = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        //intial values\r\n        initialValues={initialCredentials}\r\n        //YUP validation schema\r\n        validationSchema={loginSchema}\r\n        //VALUES toma los valores que son enviados desde el formulario\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          dispatch(fetchUser());\r\n          navigate(\"/Profile\");\r\n        }}\r\n        // await new Promise((r) => setTimeout(r, 1000));\r\n        //   //alert(JSON.stringify(values, null, 2));\r\n        //   //!!aqui se debe escuchar al STORE para cambiar el\r\n        //   //!!ESTADO LOG\r\n\r\n        //   //setlogged(true);\r\n        //   /*we save the data in the LOCALSTORAGE */\r\n        //   //localStorage.setItem(\"credentials\", values);\r\n      >\r\n        {/*obtenemos props de formik, estos son aportados por la misma etiqueta */}\r\n        {({\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n        }) => (\r\n          <Form>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Field\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"ejemplo@gmail.com\"\r\n              type=\"email\"\r\n              required\r\n            ></Field>\r\n\r\n            {/*aqi manejo los errores del mail */}\r\n            {errors.email && touched.email && (\r\n              <div>\r\n                <ErrorMessage name=\"email\"></ErrorMessage>\r\n              </div>\r\n            )}\r\n\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Field\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n            ></Field>\r\n            {/*aqi manejo los errores del password */}\r\n            {errors.password && touched.password && (\r\n              <div>\r\n                <ErrorMessage name=\"password\"></ErrorMessage>\r\n              </div>\r\n            )}\r\n            <button type=\"submit\">Login</button>\r\n            {/*este es un prop que me captura el estado de la carga(isSubmittin:boolean) */}\r\n            {/* {isSubmitting ? <p>login your credentials...</p> : null} */}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginFormik;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}