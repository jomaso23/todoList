{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jomas\\\\todo3\\\\src\\\\components\\\\Form\\\\LoginFormik.jsx\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"invalid email format\").required(\"email is required\"),\n  password: Yup.string().required(\"password is required\")\n});\nconst LoginFormik = ({\n  setlogged\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const initialCredentials = {\n    email: \"\",\n    password: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"primer formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik\n    //intial values\n    , {\n      initialValues: initialCredentials\n      //YUP validation schema\n      ,\n      validationSchema: loginSchema\n      //VALUES toma los valores que son enviados desde el formulario\n      ,\n      onSubmit: async values => {\n        await new Promise(r => setTimeout(r, 2000));\n        alert(JSON.stringify(values, null, 2));\n        setlogged(true);\n        /*we save the data in the LOCALSTORAGE */\n        localStorage.setItem(\"credentials\", values);\n        navigate(\"/profile\");\n      },\n      children: ({\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"email\",\n          name: \"email\",\n          placeHolder: \"ejemplo@gmail.com\",\n          type: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"password\",\n          name: \"password\",\n          placeHolder: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"login your credentials...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginFormik, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginFormik;\nexport default LoginFormik;\nvar _c;\n$RefreshReg$(_c, \"LoginFormik\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useNavigate","Yup","jsxDEV","_jsxDEV","loginSchema","object","shape","email","string","required","password","LoginFormik","setlogged","_s","navigate","initialCredentials","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","values","Promise","r","setTimeout","alert","JSON","stringify","localStorage","setItem","touched","errors","isSubmitting","handleChange","handleBlur","htmlFor","id","name","placeHolder","type","_c","$RefreshReg$"],"sources":["C:/Users/jomas/todo3/src/components/Form/LoginFormik.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"invalid email format\")\r\n    .required(\"email is required\"),\r\n  password: Yup.string().required(\"password is required\"),\r\n});\r\n\r\nconst LoginFormik = ({ setlogged }) => {\r\n  const navigate = useNavigate();\r\n  const initialCredentials = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>primer formik</h4>\r\n      <Formik\r\n        //intial values\r\n        initialValues={initialCredentials}\r\n        //YUP validation schema\r\n        validationSchema={loginSchema}\r\n        //VALUES toma los valores que son enviados desde el formulario\r\n        onSubmit={async (values) => {\r\n          await new Promise((r) => setTimeout(r, 2000));\r\n          alert(JSON.stringify(values, null, 2));\r\n          setlogged(true);\r\n          /*we save the data in the LOCALSTORAGE */\r\n          localStorage.setItem(\"credentials\", values);\r\n          navigate(\"/profile\");\r\n        }}\r\n      >\r\n        {/*obtenemos props de formik, estos son aportados por la misma etiqueta */}\r\n        {({\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n        }) => (\r\n          <Form>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Field\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeHolder=\"ejemplo@gmail.com\"\r\n              type=\"email\"\r\n              required\r\n            ></Field>\r\n\r\n            {/*aqi manejo los errores del mail */}\r\n            {errors.email && touched.email && (\r\n              <div>\r\n                <ErrorMessage name=\"email\"></ErrorMessage>\r\n              </div>\r\n            )}\r\n\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Field\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeHolder=\"password\"\r\n              type=\"password\"\r\n            ></Field>\r\n            {/*aqi manejo los errores del password */}\r\n            {errors.password && touched.password && (\r\n              <div>\r\n                <ErrorMessage name=\"password\"></ErrorMessage>\r\n              </div>\r\n            )}\r\n            <button type=\"submit\">Login</button>\r\n            {/*este es un prop que me captura el estado de la carga(isSubmittin:boolean) */}\r\n            {isSubmitting ? <p>login your credentials...</p> : null}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginFormik;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}